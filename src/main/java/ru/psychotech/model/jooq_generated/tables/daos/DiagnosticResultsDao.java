/*
 * This file is generated by jOOQ.
 */
package jooq_generated.tables.daos;


import java.util.List;

import jooq_generated.tables.DiagnosticResults;
import jooq_generated.tables.records.DiagnosticResultsRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * The table <code>public.diagnostic_results</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiagnosticResultsDao extends DAOImpl<DiagnosticResultsRecord, jooq_generated.tables.pojos.DiagnosticResults, Long> {

    /**
     * Create a new DiagnosticResultsDao without any configuration
     */
    public DiagnosticResultsDao() {
        super(DiagnosticResults.DIAGNOSTIC_RESULTS, jooq_generated.tables.pojos.DiagnosticResults.class);
    }

    /**
     * Create a new DiagnosticResultsDao with an attached configuration
     */
    public DiagnosticResultsDao(Configuration configuration) {
        super(DiagnosticResults.DIAGNOSTIC_RESULTS, jooq_generated.tables.pojos.DiagnosticResults.class, configuration);
    }

    @Override
    public Long getId(jooq_generated.tables.pojos.DiagnosticResults object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DiagnosticResults.DIAGNOSTIC_RESULTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchById(Long... values) {
        return fetch(DiagnosticResults.DIAGNOSTIC_RESULTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq_generated.tables.pojos.DiagnosticResults fetchOneById(Long value) {
        return fetchOne(DiagnosticResults.DIAGNOSTIC_RESULTS.ID, value);
    }

    /**
     * Fetch records that have <code>client_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchRangeOfClientId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DiagnosticResults.DIAGNOSTIC_RESULTS.CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id IN (values)</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchByClientId(Long... values) {
        return fetch(DiagnosticResults.DIAGNOSTIC_RESULTS.CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>diagnostic_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchRangeOfDiagnosticId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DiagnosticResults.DIAGNOSTIC_RESULTS.DIAGNOSTIC_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diagnostic_id IN (values)</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchByDiagnosticId(Long... values) {
        return fetch(DiagnosticResults.DIAGNOSTIC_RESULTS.DIAGNOSTIC_ID, values);
    }

    /**
     * Fetch records that have <code>scale_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchRangeOfScaleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(DiagnosticResults.DIAGNOSTIC_RESULTS.SCALE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>scale_id IN (values)</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchByScaleId(Long... values) {
        return fetch(DiagnosticResults.DIAGNOSTIC_RESULTS.SCALE_ID, values);
    }

    /**
     * Fetch records that have <code>result BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchRangeOfResult(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(DiagnosticResults.DIAGNOSTIC_RESULTS.RESULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>result IN (values)</code>
     */
    public List<jooq_generated.tables.pojos.DiagnosticResults> fetchByResult(Integer... values) {
        return fetch(DiagnosticResults.DIAGNOSTIC_RESULTS.RESULT, values);
    }
}
