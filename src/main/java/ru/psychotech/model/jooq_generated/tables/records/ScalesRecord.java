/*
 * This file is generated by jOOQ.
 */
package jooq_generated.tables.records;


import jooq_generated.tables.Scales;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.scales</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScalesRecord extends UpdatableRecordImpl<ScalesRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.scales.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.scales.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.scales.diagnostic_id</code>.
     */
    public void setDiagnosticId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.scales.diagnostic_id</code>.
     */
    public Long getDiagnosticId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.scales.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.scales.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.scales.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.scales.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Scales.SCALES.ID;
    }

    @Override
    public Field<Long> field2() {
        return Scales.SCALES.DIAGNOSTIC_ID;
    }

    @Override
    public Field<String> field3() {
        return Scales.SCALES.NAME;
    }

    @Override
    public Field<String> field4() {
        return Scales.SCALES.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getDiagnosticId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getDiagnosticId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public ScalesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ScalesRecord value2(Long value) {
        setDiagnosticId(value);
        return this;
    }

    @Override
    public ScalesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ScalesRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ScalesRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScalesRecord
     */
    public ScalesRecord() {
        super(Scales.SCALES);
    }

    /**
     * Create a detached, initialised ScalesRecord
     */
    public ScalesRecord(Long id, Long diagnosticId, String name, String description) {
        super(Scales.SCALES);

        setId(id);
        setDiagnosticId(diagnosticId);
        setName(name);
        setDescription(description);
    }
}
