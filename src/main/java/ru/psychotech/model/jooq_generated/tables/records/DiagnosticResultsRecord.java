/*
 * This file is generated by jOOQ.
 */
package jooq_generated.tables.records;


import jooq_generated.tables.DiagnosticResults;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * The table <code>public.diagnostic_results</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiagnosticResultsRecord extends UpdatableRecordImpl<DiagnosticResultsRecord> implements Record5<Long, Long, Long, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.diagnostic_results.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.diagnostic_results.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.diagnostic_results.client_id</code>.
     */
    public void setClientId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.diagnostic_results.client_id</code>.
     */
    public Long getClientId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.diagnostic_results.diagnostic_id</code>.
     */
    public void setDiagnosticId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.diagnostic_results.diagnostic_id</code>.
     */
    public Long getDiagnosticId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.diagnostic_results.scale_id</code>.
     */
    public void setScaleId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.diagnostic_results.scale_id</code>.
     */
    public Long getScaleId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.diagnostic_results.result</code>.
     */
    public void setResult(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.diagnostic_results.result</code>.
     */
    public Integer getResult() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Long, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, Long, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DiagnosticResults.DIAGNOSTIC_RESULTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return DiagnosticResults.DIAGNOSTIC_RESULTS.CLIENT_ID;
    }

    @Override
    public Field<Long> field3() {
        return DiagnosticResults.DIAGNOSTIC_RESULTS.DIAGNOSTIC_ID;
    }

    @Override
    public Field<Long> field4() {
        return DiagnosticResults.DIAGNOSTIC_RESULTS.SCALE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return DiagnosticResults.DIAGNOSTIC_RESULTS.RESULT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getClientId();
    }

    @Override
    public Long component3() {
        return getDiagnosticId();
    }

    @Override
    public Long component4() {
        return getScaleId();
    }

    @Override
    public Integer component5() {
        return getResult();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getClientId();
    }

    @Override
    public Long value3() {
        return getDiagnosticId();
    }

    @Override
    public Long value4() {
        return getScaleId();
    }

    @Override
    public Integer value5() {
        return getResult();
    }

    @Override
    public DiagnosticResultsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DiagnosticResultsRecord value2(Long value) {
        setClientId(value);
        return this;
    }

    @Override
    public DiagnosticResultsRecord value3(Long value) {
        setDiagnosticId(value);
        return this;
    }

    @Override
    public DiagnosticResultsRecord value4(Long value) {
        setScaleId(value);
        return this;
    }

    @Override
    public DiagnosticResultsRecord value5(Integer value) {
        setResult(value);
        return this;
    }

    @Override
    public DiagnosticResultsRecord values(Long value1, Long value2, Long value3, Long value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiagnosticResultsRecord
     */
    public DiagnosticResultsRecord() {
        super(DiagnosticResults.DIAGNOSTIC_RESULTS);
    }

    /**
     * Create a detached, initialised DiagnosticResultsRecord
     */
    public DiagnosticResultsRecord(Long id, Long clientId, Long diagnosticId, Long scaleId, Integer result) {
        super(DiagnosticResults.DIAGNOSTIC_RESULTS);

        setId(id);
        setClientId(clientId);
        setDiagnosticId(diagnosticId);
        setScaleId(scaleId);
        setResult(result);
    }
}
